/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adventuregame;

import java.util.Random;


/**
 *
 * @author Saad
 */
public class AdventureGameGUI extends javax.swing.JFrame {

    public static Player ply;
    public static Monster mons;

    /**
     * Creates new form AdventureGameGUI
     */
    public AdventureGameGUI() {
        this.setTitle("Adventure Game");
        ply = new Player();
        initComponents();
        this.heroStats.setText(ply.toString());
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sBTN = new javax.swing.JButton();
        nBTN = new javax.swing.JButton();
        eBTN = new javax.swing.JButton();
        wBTN = new javax.swing.JButton();
        fightBTN = new javax.swing.JButton();
        sleepBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enemyStats = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        heroStats = new javax.swing.JTextArea();
        notif = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sBTN.setText("SOUTH");
        sBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBTNActionPerformed(evt);
            }
        });

        nBTN.setText("NORTH");
        nBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nBTNActionPerformed(evt);
            }
        });

        eBTN.setText("EAST");
        eBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eBTNActionPerformed(evt);
            }
        });

        wBTN.setText("WEST");
        wBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wBTNActionPerformed(evt);
            }
        });

        fightBTN.setText("Fight");
        fightBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightBTNActionPerformed(evt);
            }
        });

        sleepBTN.setText("Sleep");
        sleepBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sleepBTNActionPerformed(evt);
            }
        });

        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        jLabel1.setText("Hero Stats");

        jLabel2.setText("Enemy Stats");

        enemyStats.setEditable(false);
        enemyStats.setColumns(20);
        enemyStats.setRows(5);
        jScrollPane1.setViewportView(enemyStats);

        heroStats.setEditable(false);
        heroStats.setColumns(20);
        heroStats.setRows(5);
        jScrollPane2.setViewportView(heroStats);

        notif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notif.setText("Notifications");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(wBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(fightBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sleepBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(nBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(sBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(notif, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(10, 10, 10)
                .addComponent(notif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(nBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eBTN)
                    .addComponent(wBTN)
                    .addComponent(fightBTN)
                    .addComponent(sleepBTN)
                    .addComponent(searchBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sBTN)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBTNActionPerformed
        // TODO add your handling code here:
        this.enemyStats.setText("");
        Random rand = new Random();
        if (((rand.nextInt(3) + 1) / 3 * 100) < 25) { //25% chance of monster
            mons = new Monster();
            this.enemyStats.setText(mons.toString());
            this.notif.setText("There's a monster in a room");
        }
    }//GEN-LAST:event_sBTNActionPerformed

    private void nBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nBTNActionPerformed
        // TODO add your handling code here:
        this.enemyStats.setText("");
        Random rand = new Random();
        if (((rand.nextInt(3) + 1) / 3 * 100) < 25) { //25% chance of monster
            mons = new Monster();
            this.enemyStats.setText(mons.toString());
            this.notif.setText("There's a monster in a room");
        }
    }//GEN-LAST:event_nBTNActionPerformed

    private void eBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eBTNActionPerformed
        // TODO add your handling code here:
        this.enemyStats.setText("");
        Random rand = new Random();
        if (((rand.nextInt(3) + 1) / 3 * 100) < 25) { //25% chance of monster
            mons = new Monster();
            this.enemyStats.setText(mons.toString());
            this.notif.setText("There's a monster in a room");
        }
    }//GEN-LAST:event_eBTNActionPerformed

    private void wBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wBTNActionPerformed
        // TODO add your handling code here:
        this.enemyStats.setText("");
        Random rand = new Random();
        if (((rand.nextInt(3) + 1) / 3 * 100) < 25) { //25% chance of monster
            mons = new Monster();
            this.enemyStats.setText(mons.toString());
            this.notif.setText("There's a monster in a room");
        }
    }//GEN-LAST:event_wBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // TODO add your handling code here:
        this.enemyStats.setText("");
        if (mons != null) {
            this.notif.setText("There's a monster in room");
            return;
        }
        Dice D20 = new Dice();
        int rollVal = D20.getRoll(20);
        Random rand = new Random();
        if (ply.getIntelligence() > rollVal) {
            int goldFound = rand.nextInt(100) + 1;
            this.notif.setText("You have found gold of: " + goldFound + " units");
            ply.setTotalGold(ply.getTotalGold() + goldFound);
            this.heroStats.setText(ply.toString());
        } else {
            this.notif.setText("No gold found in room");
        }
    }//GEN-LAST:event_searchBTNActionPerformed

    private void fightBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fightBTNActionPerformed
        // TODO add your handling code here:
        while (true) {
            Dice fightRoll = new Dice();
            int val = fightRoll.getRoll(20);
            if (val >= mons.getDexterity()) {
                mons.setHitPoints(mons.getHitPoints() - ply.getStrength() / 3);
                this.notif.setText("You hit monster with " + ply.getStrength() / 3 + " damage");
            }
            this.heroStats.setText(ply.toString());

            if (mons.getHitPoints() > 0) {
                ply.setHitPoints(ply.getHitPoints() - mons.getStrength() / 3);
                this.notif.setText("Monster hit you with " + mons.getStrength() / 3 + " damage");
            }
            this.enemyStats.setText(mons.toString());
            if (mons.getHitPoints() < 0) {
                mons = null;
                this.notif.setText("Monster has been defeated");
                break;
            } else if (ply.getHitPoints() < 0) {
                this.notif.setText("You have been defeated");
                break;
            }
        }

    }//GEN-LAST:event_fightBTNActionPerformed

    private void sleepBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sleepBTNActionPerformed
        // TODO add your handling code here:
        if (mons == null) {
            ply.setHitPoints(20);
            this.heroStats.setText(ply.toString());
            this.enemyStats.setText("");
            Random rand = new Random();
            if (((rand.nextInt(6) + 1) / 6 * 100) <= 17) { //17% chance of monster while sleeping
                mons = new Monster();
                this.enemyStats.setText(mons.toString());
                this.notif.setText("There's a monster in a room");
            }

        } else {
            this.notif.setText("There's a monster in room");
        }
    }//GEN-LAST:event_sleepBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdventureGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdventureGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdventureGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdventureGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdventureGameGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eBTN;
    private javax.swing.JTextArea enemyStats;
    private javax.swing.JButton fightBTN;
    private javax.swing.JTextArea heroStats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nBTN;
    private javax.swing.JLabel notif;
    private javax.swing.JButton sBTN;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton sleepBTN;
    private javax.swing.JButton wBTN;
    // End of variables declaration//GEN-END:variables
}
